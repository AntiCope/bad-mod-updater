name: PyInstaller Build
on:
  push:
    branches: [ master ]

jobs:
  release:
    name: Setup Release
    runs-on: ubuntu-latest
    steps:
    - name: Delete previous release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v2
    - name: Upload release
      uses: svenstaro/upload-release-action@2.2.1
      with:
        body: "Commit: ${{ github.sha }} (${{github.actor}})"
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: "latest"
        file: updater.py
        asset_name: updater.py
        overwrite: true
    
  
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: macos
            cmd: pyinstaller -F -n updater updater.py
            file: updater
          - os: windows-latest
            target: windows
            cmd: pyinstaller -F -n updater updater.py
            file: updater.exe
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
      - name: Build for ${{matrix.target}}
        run: ${{matrix.cmd}}
      - name: Upload release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: "latest"
          file: ./dist/${{matrix.file}}
          asset_name: ${{matrix.target}}-${{matrix.file}}
          overwrite: true
        
